name: Deploy

on:
  workflow_run:
    workflows: ["Build & Verify"]
    types:
      - completed

permissions:
  contents: read
  deployments: write

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.16.0'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '10.11.1'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Deploy to VPS
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_KEY: ${{ secrets.VPS_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$VPS_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST << EOF
          set -e
          export PATH="/root/.nvm/versions/node/v22.16.0/bin:$PATH"
            cd /opt/discord-bot
            git pull
            pnpm install --frozen-lockfile
            sudo systemctl restart discord-bot.service
          EOF

      - name: Create deployment on GitHub
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
         echo '{
          "ref": "'"$GITHUB_SHA"'",
          "environment": "production",
          "auto_merge": false,
          "required_contexts": ["Build & Verify","CodeQL","Dependabot Updates"]
          }' | gh api -X POST /repos/Arsabutispik/Khaxy/deployments --input -
