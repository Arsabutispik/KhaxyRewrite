name: Deploy Bot to VPS

on:
  push:
    branches:
      - master  # or main, whatever you're using
permissions: 
  contents: read
jobs:
  deploy:
    name: Deploy to VPS
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repo
        uses: actions/checkout@v4

      - name: 🚀 Create GitHub Deployment
        id: deployment
        uses: peter-evans/create-deployment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: production
          transient_environment: false
          auto_inactive: true

      - name: 📡 Mark deployment as in_progress
        uses: peter-evans/deployment-status@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          state: in_progress

      - name: 🛠️ Deploy to VPS
        run: |
          ssh -T ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            set -e
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm use 22
            cd /opt/discord-bot
            git pull origin master
            pnpm install --frozen-lockfile
            sudo systemctl restart discord-bot.service
          EOF

      - name: ✅ Mark deployment as successful
        if: success()
        uses: peter-evans/deployment-status@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          state: success

      - name: ❌ Mark deployment as failed
        if: failure()
        uses: peter-evans/deployment-status@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          state: failure
